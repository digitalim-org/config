---
- name: Configure bluetooth headset
  hosts: localhost
  gather_facts: no
  collections: 
    - ansible.builtin
    - community.general
  tasks:
    - name: Ensure bluetooth is not blocked by rfkill
      block: 
        - name: Register rfkill bluetooth info
          shell: rfkill -J | jq '.[""][] | select(.type == "bluetooth")'
          register: rfkill_bluetooth_command
          changed_when: false

        - name: Get soft-blocked status
          set_fact: 
            soft_status: "{{ rfkill_bluetooth_command.stdout | from_json | json_query('soft') }}" 

        - name: Get hard-blocked status
          debug:
            msg: "{{ rfkill_bluetooth_command.stdout | from_json | json_query('hard') }}" 
          register: hard_status

        - name: Unblock bluetooth
          when: soft_status == 'blocked'
          become: yes
          command: rfkill unblock bluetooth

    - name: Install packages
      become: yes
      block:
        - name: pulseaudio-alsa
          pacman:
            name: pulseaudio-alsa
            update_cache: yes

        - name: pulseaudio-bluetooth
          pacman:
            name: pulseaudio-bluetooth
            update_cache: yes

        - name: bluez-utils
          pacman:
            name: bluez-utils
            update_cache: yes

    - name: Get bluetooth systemctl status
      block:
        - name: Set is-active
          shell: "systemctl is-active bluetooth"
          register: systemctl_is_active
          # For some reason uses non-zero exit codes when service is inactive
          failed_when: false
          changed_when: false

        - name: Set is-enabled
          shell: "systemctl is-enabled bluetooth"
          register: systemctl_is_enabled
          failed_when: false
          changed_when: false

    - name: Enable and start bluetoothctl
      when: systemctl_is_active.stdout == 'inactive' or systemctl_is_enabled.stdout == 'disabled'
      become: yes
      block:
        - name: Start bluetoothctl
          when: systemctl_is_active.stdout == 'inactive'
          shell: "systemctl start bluetooth"

        - name: Enable bluetoothctl
          when: systemctl_is_enabled.stdout == 'disabled'
          shell: "systemctl enable bluetooth"
